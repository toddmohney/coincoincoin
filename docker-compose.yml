version: "2.2"
volumes:
  geth:
  ethash:
  kafka:
  zookeeper_conf:
  zookeeper_data:

services:
  geth:
    build:
      context: ./geth
      dockerfile: Dockerfile
      args:
        username: "${GETH_USER}"
        coinbase: "${COINBASE}"
        networkid: "${GETH_NETWORK_ID}"
    command: "geth --mine --minerthreads 2 --etherbase ${COINBASE} --rpc --rpcaddr '0.0.0.0' --rpcport 8545 --rpccorsdomain '*' --rpcapi 'eth,net,web3' --ws --wsapi 'eth,net,web3' --wsport 8546 --networkid ${GETH_NETWORK_ID}"
    cpus: 1.5
    ports:
    - "8545-8546:8545-8546"
    - "6060:6060"
    - "30303:30303"
    user: "${GETH_USER}"
    volumes:
    - geth:/home/${GETH_USER}/.ethereum
    - ethash:/home/${GETH_USER}/.ethash

  node-event-producer:
    build:
      context: ./node-event-producer
      dockerfile: Dockerfile
    command: "node app.js"
    depends_on:
      - geth
      - kafka

  congress-event-consumer:
    image: coincoincoin/coincoincoin
    command: congress-consumer
    env_file:
    - node-event-consumers/congress-consumer/env/development.env
    links:
    - kafka
    - postgres
    restart: always

  dapp:
    build:
      context: ./hello
      dockerfile: Dockerfile
    network_mode: "host"
    ports:
    - "4567:4567"

  block-explorer:
    build:
      context: ./block-explorer
      dockerfile: Dockerfile
    network_mode: "host"
    user: blockexplorer

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
    - "2181:2181"
    volumes:
    - zookeeper_conf:/opt/zookeeper-3.4.9/conf"
    - zookeeper_data:/opt/zookeeper-3.4.9/data

  kafka:
    image: wurstmeister/kafka:1.0.0
    depends_on:
    - zookeeper
    ports:
    - "9092-9094:9092-9094"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "CongressContractEventReceived:1:1"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - kafka:/kafka
